From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yanbing Zhao <zzzz@mail.ustc.edu.cn>
Date: Thu, 12 May 2016 12:06:50 +0800
Subject: v3.1.5


diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/entity/EntityGoldenChicken.java b/src/main/java/com/github/ustc_zzzz/fmltutor/entity/EntityGoldenChicken.java
index 7a72f58..407b05f 100644
--- a/src/main/java/com/github/ustc_zzzz/fmltutor/entity/EntityGoldenChicken.java
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/entity/EntityGoldenChicken.java
@@ -2,12 +2,18 @@ package com.github.ustc_zzzz.fmltutor.entity;
 
 import com.github.ustc_zzzz.fmltutor.item.ItemLoader;
 
+import net.minecraft.block.Block;
 import net.minecraft.entity.SharedMonsterAttributes;
+import net.minecraft.entity.ai.EntityAIBase;
 import net.minecraft.entity.ai.attributes.IAttribute;
 import net.minecraft.entity.ai.attributes.RangedAttribute;
+import net.minecraft.entity.item.EntityItem;
 import net.minecraft.entity.passive.EntityChicken;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.item.ItemStack;
 import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.util.AxisAlignedBB;
+import net.minecraft.util.BlockPos;
 import net.minecraft.world.World;
 
 public class EntityGoldenChicken extends EntityChicken
@@ -19,6 +25,7 @@ public class EntityGoldenChicken extends EntityChicken
     {
         super(worldIn);
         this.setSize(1.2F, 1.8F);
+        this.tasks.addTask(8, new AIStackBlock(this));
     }
 
     @Override
@@ -80,4 +87,46 @@ public class EntityGoldenChicken extends EntityChicken
         }
         super.dropFewItems(arg1, arg2);
     }
+
+    protected static class AIStackBlock extends EntityAIBase
+    {
+        private final EntityGoldenChicken entity;
+
+        public AIStackBlock(EntityGoldenChicken entity)
+        {
+            this.entity = entity;
+        }
+
+        @Override
+        public boolean shouldExecute()
+        {
+            return this.entity.worldObj.getGameRules().getBoolean("mobGriefing");
+        }
+
+        @Override
+        public void updateTask()
+        {
+            BlockPos entityPos = new BlockPos(entity);
+            if (entity.worldObj.isAirBlock(entityPos.up()))
+            {
+                AxisAlignedBB aabb = AxisAlignedBB.fromBounds(entityPos.getX() - 1, entityPos.getY(),
+                        entityPos.getZ() - 1, entityPos.getX() + 2, entityPos.getY() + 1, entityPos.getZ() + 2);
+                for (Object e : entity.worldObj.getEntitiesWithinAABB(EntityItem.class, aabb))
+                {
+                    ItemStack stack = ((EntityItem) e).getEntityItem();
+                    Block block = Block.getBlockFromItem(stack.getItem());
+                    if (block != null)
+                    {
+                        entity.setLocationAndAngles(entity.posX, entity.posY + 1, entity.posZ, entity.rotationYaw,
+                                entity.rotationPitch);
+                        entity.worldObj.setBlockState(entityPos, block.getDefaultState());
+                        if (--stack.stackSize <= 0)
+                        {
+                            ((EntityItem) e).setDead();
+                        }
+                    }
+                }
+            }
+        }
+    }
 }

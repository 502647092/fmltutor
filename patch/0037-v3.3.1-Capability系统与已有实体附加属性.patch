From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yanbing Zhao <zzzz@mail.ustc.edu.cn>
Date: Sun, 7 Aug 2016 20:08:03 +0800
Subject: v3.3.1


diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityLoader.java b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityLoader.java
new file mode 100644
index 0000000..e6b7b5f
--- /dev/null
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityLoader.java
@@ -0,0 +1,18 @@
+package com.github.ustc_zzzz.fmltutor.capability;
+
+import net.minecraftforge.common.capabilities.Capability;
+import net.minecraftforge.common.capabilities.CapabilityInject;
+import net.minecraftforge.common.capabilities.CapabilityManager;
+import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
+
+public class CapabilityLoader
+{
+    @CapabilityInject(IPositionHistory.class)
+    public static Capability<IPositionHistory> positionHistory;
+
+    public CapabilityLoader(FMLPreInitializationEvent event)
+    {
+        CapabilityManager.INSTANCE.register(IPositionHistory.class, new CapabilityPositionHistory.Storage(),
+                CapabilityPositionHistory.Implementation.class);
+    }
+}
diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityPositionHistory.java b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityPositionHistory.java
new file mode 100644
index 0000000..8b3b322
--- /dev/null
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/CapabilityPositionHistory.java
@@ -0,0 +1,117 @@
+package com.github.ustc_zzzz.fmltutor.capability;
+
+import net.minecraft.nbt.NBTBase;
+import net.minecraft.nbt.NBTTagCompound;
+import net.minecraft.nbt.NBTTagList;
+import net.minecraft.util.EnumFacing;
+import net.minecraft.util.Vec3;
+import net.minecraftforge.common.capabilities.Capability;
+import net.minecraftforge.common.capabilities.Capability.IStorage;
+import net.minecraftforge.common.capabilities.ICapabilitySerializable;
+
+public class CapabilityPositionHistory
+{
+    public static class Storage implements Capability.IStorage<IPositionHistory>
+    {
+        @Override
+        public NBTBase writeNBT(Capability<IPositionHistory> capability, IPositionHistory instance, EnumFacing side)
+        {
+            NBTTagList list = new NBTTagList();
+            for (Vec3 vec3 : instance.getHistories())
+            {
+                NBTTagCompound compound = new NBTTagCompound();
+                if (vec3 != null)
+                {
+                    compound.setDouble("x", vec3.xCoord);
+                    compound.setDouble("y", vec3.yCoord);
+                    compound.setDouble("z", vec3.zCoord);
+                }
+                list.appendTag(compound);
+            }
+            return list;
+        }
+
+        @Override
+        public void readNBT(Capability<IPositionHistory> capability, IPositionHistory instance, EnumFacing side,
+                NBTBase nbt)
+        {
+            NBTTagList list = (NBTTagList) nbt;
+            Vec3[] histories = new Vec3[list.tagCount()];
+            for (int i = 0; i < histories.length; ++i)
+            {
+                NBTTagCompound compound = list.getCompoundTagAt(i);
+                if (!compound.hasNoTags())
+                {
+                    histories[i] = new Vec3(compound.getDouble("x"), compound.getDouble("y"), compound.getDouble("z"));
+                }
+            }
+            instance.setHistories(histories);
+        }
+    }
+
+    public static class Implementation implements IPositionHistory
+    {
+        private Vec3[] histories = new Vec3[5];
+
+        @Override
+        public Vec3[] getHistories()
+        {
+            return histories.clone();
+        }
+
+        @Override
+        public void setHistories(Vec3[] position)
+        {
+            histories = position.clone();
+        }
+
+        @Override
+        public void pushHistory(Vec3 position)
+        {
+            for (int i = 1; i < histories.length; ++i)
+            {
+                histories[i - 1] = histories[i];
+            }
+            histories[histories.length - 1] = position;
+        }
+    }
+
+    public static class ProviderPlayer implements ICapabilitySerializable<NBTTagCompound>
+    {
+        private IPositionHistory histories = new Implementation();
+        private IStorage<IPositionHistory> storage = CapabilityLoader.positionHistory.getStorage();
+
+        @Override
+        public boolean hasCapability(Capability<?> capability, EnumFacing facing)
+        {
+            return CapabilityLoader.positionHistory.equals(capability);
+        }
+
+        @Override
+        public <T> T getCapability(Capability<T> capability, EnumFacing facing)
+        {
+            if (CapabilityLoader.positionHistory.equals(capability))
+            {
+                @SuppressWarnings("unchecked")
+                T result = (T) histories;
+                return result;
+            }
+            return null;
+        }
+
+        @Override
+        public NBTTagCompound serializeNBT()
+        {
+            NBTTagCompound compound = new NBTTagCompound();
+            compound.setTag("histories", storage.writeNBT(CapabilityLoader.positionHistory, histories, null));
+            return compound;
+        }
+
+        @Override
+        public void deserializeNBT(NBTTagCompound compound)
+        {
+            NBTTagList list = (NBTTagList) compound.getTag("histories");
+            storage.readNBT(CapabilityLoader.positionHistory, histories, null, list);
+        }
+    }
+}
diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/capability/IPositionHistory.java b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/IPositionHistory.java
new file mode 100644
index 0000000..105ffb1
--- /dev/null
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/capability/IPositionHistory.java
@@ -0,0 +1,12 @@
+package com.github.ustc_zzzz.fmltutor.capability;
+
+import net.minecraft.util.Vec3;
+
+public interface IPositionHistory
+{
+    public Vec3[] getHistories();
+
+    public void setHistories(Vec3[] position);
+
+    public void pushHistory(Vec3 position);
+}
diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java b/src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java
index db5e25d..bab634b 100644
--- a/src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java
@@ -2,6 +2,9 @@ package com.github.ustc_zzzz.fmltutor.command;
 
 import java.util.List;
 
+import com.github.ustc_zzzz.fmltutor.capability.CapabilityLoader;
+import com.github.ustc_zzzz.fmltutor.capability.IPositionHistory;
+
 import net.minecraft.command.CommandBase;
 import net.minecraft.command.CommandException;
 import net.minecraft.command.ICommandSender;
@@ -9,6 +12,7 @@ import net.minecraft.command.WrongUsageException;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.BlockPos;
+import net.minecraft.util.ChatComponentText;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.Vec3;
 
@@ -44,6 +48,21 @@ public class CommandPosition extends CommandBase
             EntityPlayerMP entityPlayerMP = args.length > 0 ? CommandBase.getPlayer(sender, args[0])
                     : CommandBase.getCommandSenderAsPlayer(sender);
             Vec3 pos = entityPlayerMP.getPositionVector();
+
+            if (entityPlayerMP == sender && entityPlayerMP.hasCapability(CapabilityLoader.positionHistory, null))
+            {
+                sender.addChatMessage(new ChatComponentTranslation("commands.position.history"));
+                IPositionHistory histories = entityPlayerMP.getCapability(CapabilityLoader.positionHistory, null);
+                for (Vec3 vec3 : histories.getHistories())
+                {
+                    if (vec3 != null)
+                    {
+                        sender.addChatMessage(new ChatComponentText(vec3.toString()));
+                    }
+                }
+                histories.pushHistory(pos);
+            }
+
             sender.addChatMessage(new ChatComponentTranslation("commands.position.success", entityPlayerMP.getName(),
                     pos, entityPlayerMP.worldObj.provider.getDimensionName()));
         }
diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java b/src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java
index f00e462..6491993 100644
--- a/src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java
@@ -2,6 +2,7 @@ package com.github.ustc_zzzz.fmltutor.common;
 
 import com.github.ustc_zzzz.fmltutor.achievement.AchievementLoader;
 import com.github.ustc_zzzz.fmltutor.block.BlockLoader;
+import com.github.ustc_zzzz.fmltutor.capability.CapabilityLoader;
 import com.github.ustc_zzzz.fmltutor.command.CommandLoader;
 import com.github.ustc_zzzz.fmltutor.crafting.CraftingLoader;
 import com.github.ustc_zzzz.fmltutor.creativetab.CreativeTabsLoader;
@@ -24,6 +25,7 @@ public class CommonProxy
     public void preInit(FMLPreInitializationEvent event)
     {
         new ConfigLoader(event);
+        new CapabilityLoader(event);
         new CreativeTabsLoader(event);
         new FluidLoader(event);
         new ItemLoader(event);
diff --git a/src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java b/src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java
index 5c71d25..0ba35b4 100644
--- a/src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java
+++ b/src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java
@@ -1,7 +1,11 @@
 package com.github.ustc_zzzz.fmltutor.common;
 
+import com.github.ustc_zzzz.fmltutor.FMLTutor;
 import com.github.ustc_zzzz.fmltutor.achievement.AchievementLoader;
 import com.github.ustc_zzzz.fmltutor.block.BlockLoader;
+import com.github.ustc_zzzz.fmltutor.capability.CapabilityLoader;
+import com.github.ustc_zzzz.fmltutor.capability.CapabilityPositionHistory;
+import com.github.ustc_zzzz.fmltutor.capability.IPositionHistory;
 import com.github.ustc_zzzz.fmltutor.client.KeyLoader;
 import com.github.ustc_zzzz.fmltutor.enchantment.EnchantmentLoader;
 import com.github.ustc_zzzz.fmltutor.entity.EntityGoldenChicken;
@@ -21,13 +25,20 @@ import net.minecraft.init.Items;
 import net.minecraft.item.Item;
 import net.minecraft.item.ItemStack;
 import net.minecraft.item.crafting.FurnaceRecipes;
+import net.minecraft.nbt.NBTBase;
+import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.potion.PotionEffect;
 import net.minecraft.util.BlockPos;
 import net.minecraft.util.ChatComponentTranslation;
 import net.minecraft.util.DamageSource;
 import net.minecraft.util.EnumFacing;
+import net.minecraft.util.ResourceLocation;
 import net.minecraft.world.World;
 import net.minecraftforge.common.MinecraftForge;
+import net.minecraftforge.common.capabilities.Capability;
+import net.minecraftforge.common.capabilities.Capability.IStorage;
+import net.minecraftforge.common.capabilities.ICapabilitySerializable;
+import net.minecraftforge.event.AttachCapabilitiesEvent;
 import net.minecraftforge.event.entity.living.LivingDeathEvent;
 import net.minecraftforge.event.entity.living.LivingHurtEvent;
 import net.minecraftforge.event.entity.player.EntityInteractEvent;
@@ -220,6 +231,29 @@ public class EventLoader
         }
     }
 
+    @SubscribeEvent
+    public void onAttachCapabilitiesEntity(AttachCapabilitiesEvent.Entity event)
+    {
+        if (event.getEntity() instanceof EntityPlayer)
+        {
+            ICapabilitySerializable<NBTTagCompound> provider = new CapabilityPositionHistory.ProviderPlayer();
+            event.addCapability(new ResourceLocation(FMLTutor.MODID + ":" + "position_history"), provider);
+        }
+    }
+
+    @SubscribeEvent
+    public void onPlayerClone(net.minecraftforge.event.entity.player.PlayerEvent.Clone event)
+    {
+        Capability<IPositionHistory> capability = CapabilityLoader.positionHistory;
+        IStorage<IPositionHistory> storage = capability.getStorage();
+
+        if (event.original.hasCapability(capability, null) && event.entityPlayer.hasCapability(capability, null))
+        {
+            NBTBase nbt = storage.writeNBT(capability, event.original.getCapability(capability, null), null);
+            storage.readNBT(capability, event.entityPlayer.getCapability(capability, null), null, nbt);
+        }
+    }
+
     @Cancelable
     public static class PlayerRightClickGrassBlockEvent extends net.minecraftforge.event.entity.player.PlayerEvent
     {
diff --git a/src/main/resources/assets/fmltutor/lang/en_US.lang b/src/main/resources/assets/fmltutor/lang/en_US.lang
index c3c4952..d9fad2d 100644
--- a/src/main/resources/assets/fmltutor/lang/en_US.lang
+++ b/src/main/resources/assets/fmltutor/lang/en_US.lang
@@ -37,6 +37,7 @@ achievement.fmltutor.explosionFromGrassBlock=Grass Block Explosion
 achievement.fmltutor.explosionFromGrassBlock.desc=Make an explosion of grass block by the click
 
 commands.position.usage=/position [player]
+commands.position.history=Position query history:
 commands.position.success=The position of %1$s is %2$s in world %3$s
 
 fluid.mercury=Mercury
diff --git a/src/main/resources/assets/fmltutor/lang/zh_CN.lang b/src/main/resources/assets/fmltutor/lang/zh_CN.lang
index df2fc3e..cc6e0ed 100644
--- a/src/main/resources/assets/fmltutor/lang/zh_CN.lang
+++ b/src/main/resources/assets/fmltutor/lang/zh_CN.lang
@@ -37,6 +37,7 @@ achievement.fmltutor.explosionFromGrassBlock=草块爆炸
 achievement.fmltutor.explosionFromGrassBlock.desc=通过点击草块使草块爆炸
 
 commands.position.usage=/position [玩家]
+commands.position.history=位置查询历史：
 commands.position.success=玩家 %1$s 处于名为 %3$s 的世界，其坐标为 %2$s
 
 fluid.mercury=水银
